{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","document","addEventListener","event","setState","removeEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,MAFT,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,IAAKG,EAAMH,WAPjC,kCAWE,WAA8B,IAAD,OAC3BC,SAASI,oBAAoB,SAAS,SAACF,GACrC,EAAKC,SAAS,CAAEJ,IAAKG,EAAMH,WAbjC,oBAiBE,WACE,IAAQA,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGP,EAAG,mCAC4BA,EAD5B,KAEA,kCAzBd,GAAyBQ,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.565082ba.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string | null,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    key: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ key: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ key: event.key });\n    });\n  }\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key\n            ? `The last pressed key is [${key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}